name: Edge-Build

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/**'
    branches: [ main ]

jobs:
        
  build-natives:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            profile: "portable"
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore DiscordEventBot.sln
    - name: Build
      run: dotnet build DiscordEventBot.sln --no-restore
    - name: Publish
      run: dotnet publish DiscordEventBot.sln -p:PublishProfile=${{ matrix.profile }}
    - name: Zip Output
      run: 7z a -tzip ${{ github.event.repository.name }}-${{ matrix.profile }}-edge.zip ./DiscordEventBot.Service/bin/Release/net6.0/publish/${{ matrix.profile }}/*
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.profile }}
        path: ${{ github.workspace }}/${{ github.event.repository.name }}-${{ matrix.profile }}-edge.zip
        retention-days: 1

  init-docker-builds:
    runs-on: ubuntu-latest
    outputs:
      docker-repo: ${{ steps.repo.outputs.lowercase }}
    steps:
    - id: repo
      uses: ASzc/change-string-case-action@v2
      with:
        string: ${{ github.repository }}

  build-docker:
    runs-on: ${{ matrix.os }}
    needs: [init-docker-builds, build-natives]
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/arm64
            tag: linux-arm64
            file: Dockerfile
          - os: ubuntu-latest
            platform: linux/amd64
            tag: linux-x64
            file: Dockerfile
          - os: ubuntu-latest
            platform: linux/arm/v7
            tag: linux-arm
            file: Dockerfile
          - os: windows-latest
            platform: windows/amd64
            tag: win-x64
            file: Dockerfile
    steps:
    - uses: actions/checkout@v3
    - name: Download portable build
      uses: actions/download-artifact@v3
      with:
        name: portable
    - run: 7z x ${{ github.event.repository.name }}-portable-edge.zip -oapp/
    - name: Set up QEMU
      if: runner.os != 'windows'
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        image: tonistiigi/binfmt:latest
        platforms: ${{ matrix.platform }}
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build docker image
      run: docker build -t ${{ needs.init-docker-builds.outputs.docker-repo }}:edge-${{ matrix.tag }} -f ./${{ matrix.file }} --platform ${{ matrix.platform }} .  
    - name: Push docker image
      run: docker push ${{ needs.init-docker-builds.outputs.docker-repo }}:edge-${{ matrix.tag }}
  
  create-docker-manifest:
    runs-on: ubuntu-latest
    needs: [init-docker-builds, build-docker]
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: create manifest
      run: docker manifest create ${{ needs.init-docker-builds.outputs.docker-repo }}:edge ${{ needs.init-docker-builds.outputs.docker-repo }}:edge-win-x64 ${{ needs.init-docker-builds.outputs.docker-repo }}:edge-linux-arm ${{ needs.init-docker-builds.outputs.docker-repo }}:edge-linux-x64 ${{ needs.init-docker-builds.outputs.docker-repo }}:edge-linux-arm64
    - name: push manifest
      run: docker manifest push ${{ needs.init-docker-builds.outputs.docker-repo }}:edge
