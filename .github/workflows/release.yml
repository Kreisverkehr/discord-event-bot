name: Release

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/**'
    tags:
      - v*

jobs:
#  build-natives:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        include:
#          - os: ubuntu-latest
#            profile: "linux-x64"
#          - os: ubuntu-latest
#            profile: "linux-arm"
#          - os: windows-latest
#            profile: "win-x64"
#          - os: windows-latest
#            profile: "win-arm"
#          - os: ubuntu-latest
#            profile: "osx-x64"
#    steps:
#    - uses: actions/checkout@v2
#    - name: Setup .NET
#      uses: actions/setup-dotnet@v1
#      with:
#        dotnet-version: 5.0.x
#    - name: Restore dependencies
#      run: dotnet restore DiscordEventBot.sln
#    - name: Build
#      run: dotnet build DiscordEventBot.sln --no-restore
#    - name: Publish
#      run: dotnet publish DiscordEventBot.sln -p:PublishProfile=${{ matrix.profile }}
#    - name: Upload
#      uses: actions/upload-artifact@v2.2.4
#      with:
#        name: ${{ matrix.profile }}
#        path: DiscordEventBot.Service/bin/Release/net5.0/publish/${{ matrix.profile }}/**
#        retention-days: 1
        
  build-docker-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/arm64
            tag: linux-arm64
            file: Dockerfile
          - os: ubuntu-latest
            platform: linux/amd64
            tag: linux-x64
            file: Dockerfile
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - id: repo
      uses: ASzc/change-string-case-action@v1
      with:
        string: ${{ github.repository }}
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: ${{ matrix.platform }}
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - run: docker build -t ${{ steps.repo.outputs.lowercase }}:latest-${{ matrix.tag }} -f ./DiscordEventBot.Service/${{ matrix.file }} --platform ${{ matrix.platform }} .  
    - run: docker push ${{ steps.repo.outputs.lowercase }}:latest-${{ matrix.tag }}

#  build-docker-linux-armv7:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        include:
#          - os: ubuntu-latest
#            tag: linux-armv7
#            file: Dockerfile.armv7
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        fetch-depth: 0
#    - id: repo
#      uses: ASzc/change-string-case-action@v1
#      with:
#        string: ${{ github.repository }}
#    - name: Set up QEMU
#      id: qemu
#      uses: docker/setup-qemu-action@v1
#      with:
#        image: tonistiigi/binfmt:latest
#        platforms: ${{ matrix.platform }}
#    - name: Login to Docker Hub
#      uses: docker/login-action@v1
#      with:
#        username: ${{ secrets.DOCKERHUB_USERNAME }}
#        password: ${{ secrets.DOCKERHUB_TOKEN }}
#    - run: docker build -t ${{ steps.repo.outputs.lowercase }}:latest-${{ matrix.tag }} -f ./DiscordEventBot.Service/${{ matrix.file }} .  
#    - run: docker push ${{ steps.repo.outputs.lowercase }}:latest-${{ matrix.tag }}
#    
#  build-docker-windows:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        include:
#          - os: windows-latest
#            platform: windows/amd64
#            tag: win-x64
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        fetch-depth: 0
#    - id: repo
#      uses: ASzc/change-string-case-action@v1
#      with:
#        string: ${{ github.repository }}
#    - name: Login to Docker Hub
#      uses: docker/login-action@v1
#      with:
#        username: ${{ secrets.DOCKERHUB_USERNAME }}
#        password: ${{ secrets.DOCKERHUB_TOKEN }}
#    - run: docker build -t ${{ steps.repo.outputs.lowercase }}:latest-${{ matrix.tag }} -f ./DiscordEventBot.Service/Dockerfile --platform ${{ matrix.platform }} .
#    - run: docker push ${{ steps.repo.outputs.lowercase }}:latest-${{ matrix.tag }}
#  
#  create-docker-manifest:
#    runs-on: ubuntu-latest
#    needs: [build-docker-linux, build-docker-windows, build-docker-linux-armv7]
#    steps:
#    - name: Login to Docker Hub
#      uses: docker/login-action@v1
#      with:
#        username: ${{ secrets.DOCKERHUB_USERNAME }}
#        password: ${{ secrets.DOCKERHUB_TOKEN }}
#    - id: repo
#      uses: ASzc/change-string-case-action@v1
#      with:
#        string: ${{ github.repository }}
#    - run: docker manifest create ${{ steps.repo.outputs.lowercase }}:latest ${{ steps.repo.outputs.lowercase }}:latest-win-x64 ${{ steps.repo.outputs.lowercase }}:latest-linux-armv7 ${{ steps.repo.outputs.lowercase }}:latest-linux-x64 ${{ steps.repo.outputs.lowercase }}:latest-linux-arm64
#    - run: docker manifest push ${{ steps.repo.outputs.lowercase }}:latest
  
  create-release:
    runs-on: ubuntu-latest
    needs: [build-natives]
    steps:
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v2
    - run: tree
