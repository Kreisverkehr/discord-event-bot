name: Release

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/**'
    tags:
      - v*

jobs:

  set-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.majorMinorPatch }}
      major: ${{ steps.gitversion.outputs.major }}
      minor: ${{ steps.gitversion.outputs.minor }}
      patch: ${{ steps.gitversion.outputs.patch }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.10
      with:
        versionSpec: '5.x'
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.10
        
  build-natives:
    runs-on: ${{ matrix.os }}
    needs: [set-version]
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            profile: "linux-x64"
          - os: ubuntu-latest
            profile: "linux-arm"
          - os: windows-latest
            profile: "win-x64"
          - os: windows-latest
            profile: "win-arm"
          - os: ubuntu-latest
            profile: "osx-x64"
          - os: windows-latest
            profile: "portable"
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore DiscordEventBot.sln
    - name: Build
      run: dotnet build DiscordEventBot.sln --no-restore
    - name: Publish
      run: dotnet publish DiscordEventBot.sln -p:PublishProfile=${{ matrix.profile }}
    - uses: papeloto/action-zip@v1
      with:
        files: DiscordEventBot.Service/bin/Release/net5.0/publish/${{ matrix.profile }}/
        dest: ${{ github.event.repository.name }}-${{ matrix.profile }}-${{ needs.set-version.outputs.version }}.zip
    - name: Upload
      uses: actions/upload-artifact@v2.2.4
      with:
        name: ${{ matrix.profile }}
        path: ${{ github.workspace }}/${{ github.event.repository.name }}-${{ matrix.profile }}-${{ needs.set-version.outputs.version }}.zip
        retention-days: 1

  init-docker-builds:
    runs-on: ubuntu-latest
    outputs:
      docker-repo: ${{ steps.repo.outputs.lowercase }}
    steps:
    - id: repo
      uses: ASzc/change-string-case-action@v2
      with:
        string: ${{ github.repository }}

  build-docker:
    runs-on: ${{ matrix.os }}
    needs: [init-docker-builds, set-version, build-natives]
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/arm64
            tag: linux-arm64
            file: Dockerfile
          - os: ubuntu-latest
            platform: linux/amd64
            tag: linux-x64
            file: Dockerfile
          - os: ubuntu-latest
            platform: linux/arm/v7
            tag: linux-arm
            file: Dockerfile
          - os: windows-latest
            platform: windows/amd64
            tag: win-x64
            file: Dockerfile
    steps:
    - uses: actions/checkout@v2
    - name: Download portable build
      uses: actions/download-artifact@v2
      with:
        name: portable
    - run: 7z x ${{ github.event.repository.name }}-portable-${{ needs.set-version.outputs.version }}.zip -oapp/
    - name: Set up QEMU
      if: runner.os != 'windows'
      id: qemu
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: ${{ matrix.platform }}
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - run: docker build -t ${{ needs.init-docker-builds.outputs.docker-repo }}:latest-${{ matrix.tag }} -f ./${{ matrix.file }} --platform ${{ matrix.platform }} .  
    - run: docker push ${{ needs.init-docker-builds.outputs.docker-repo }}:latest-${{ matrix.tag }}
  
  create-docker-manifest:
    runs-on: ubuntu-latest
    needs: [init-docker-builds, build-docker]
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - run: docker manifest create ${{ needs.init-docker-builds.outputs.docker-repo }}:latest ${{ needs.init-docker-builds.outputs.docker-repo }}:latest-win-x64 ${{ needs.init-docker-builds.outputs.docker-repo }}:latest-linux-arm ${{ needs.init-docker-builds.outputs.docker-repo }}:latest-linux-x64 ${{ needs.init-docker-builds.outputs.docker-repo }}:latest-linux-arm64
    - run: docker manifest push ${{ needs.init-docker-builds.outputs.docker-repo }}:latest
  
  create-release:
    runs-on: ubuntu-latest
    needs: [build-natives, set-version, create-docker-manifest]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v2
    - name: Setup .NET3
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.x
    - uses: gittools/actions/gitreleasemanager/setup@v0.9.10
      name: Install GitReleaseManager
      with:
        versionSpec: '0.10.x'
    - uses: gittools/actions/gitreleasemanager/create@v0.9.10
      name: Create release with GitReleaseManager
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        owner: '${{ github.repository_owner }}'
        repository: '${{ github.event.repository.name }}'
        milestone: '${{ needs.set-version.outputs.version }}'
        name: 'v${{ needs.set-version.outputs.version }}'
        assets: |
          linux-arm/${{ github.event.repository.name }}-linux-arm-${{ needs.set-version.outputs.version }}.zip
          linux-x64/${{ github.event.repository.name }}-linux-x64-${{ needs.set-version.outputs.version }}.zip
          osx-x64/${{ github.event.repository.name }}-osx-x64-${{ needs.set-version.outputs.version }}.zip
          win-arm/${{ github.event.repository.name }}-win-arm-${{ needs.set-version.outputs.version }}.zip
          win-x64/${{ github.event.repository.name }}-win-x64-${{ needs.set-version.outputs.version }}.zip
          portable/${{ github.event.repository.name }}-portable-${{ needs.set-version.outputs.version }}.zip
